name: Deploy to GitHub Pages

on:
  release:
    types: [created]
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Prepare deployment
        id: prepare
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Build deployment directory
        run: |
          TAG="${{ steps.prepare.outputs.tag }}"
          IS_RELEASE="${{ steps.prepare.outputs.is_release }}"
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          
          mkdir -p deploy
          
          if [ "$IS_RELEASE" == "true" ]; then
            mkdir -p "deploy/${REPO_NAME}/${TAG}"
            cp -r index.html ru en "deploy/${REPO_NAME}/${TAG}/"
            
            python3 << PYEOF
import os
repo_name = "${REPO_NAME}"
tag = "${TAG}"
repo_full = "${{ github.repository }}"

versions_html = """<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>–í–µ—Ä—Å–∏–∏ —Ä–µ–ª–∏–∑–æ–≤</title>
<style>
body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); min-height: 100vh; padding: 40px 20px; margin: 0; }
.container { max-width: 800px; margin: 0 auto; background: white; border-radius: 20px; padding: 40px; box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3); }
h1 { color: #333; text-align: center; margin-bottom: 30px; }
.version-list { list-style: none; padding: 0; }
.version-item { margin-bottom: 15px; }
.version-link { display: block; padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; text-decoration: none; border-radius: 10px; transition: transform 0.3s ease; font-weight: bold; text-align: center; }
.version-link:hover { transform: translateY(-5px); box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2); }
</style>
</head>
<body>
<div class="container">
<h1>üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ —Ä–µ–ª–∏–∑–æ–≤</h1>
<ul class="version-list" id="versions"><li style="text-align: center; color: #666;">–ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ—Ä—Å–∏–π...</li></ul>
</div>
<script>
fetch('https://api.github.com/repos/""" + repo_full + """/git/trees/gh-pages?recursive=1')
.then(r => r.json())
.then(data => {
const versions = [...new Set(data.tree.filter(item => item.path.includes('/v') && item.type === 'tree').map(item => item.path.split('/')[1]))].filter(v => v.startsWith('v')).sort().reverse();
const list = document.getElementById('versions');
if (versions.length === 0) {
list.innerHTML = '<li style="text-align: center; color: #666;">–í–µ—Ä—Å–∏–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–æ–≤</li>';
} else {
list.innerHTML = versions.map(version => '<li class="version-item"><a href="' + version + '/" class="version-link">üöÄ –í–µ—Ä—Å–∏—è ' + version + '</a></li>').join('');
}
})
.catch(() => { document.getElementById('versions').innerHTML = '<li style="text-align: center; color: #666;">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ—Ä—Å–∏–π</li>'; });
</script>
</body>
</html>"""

os.makedirs(f"deploy/{repo_name}", exist_ok=True)
with open(f"deploy/{repo_name}/index.html", "w", encoding="utf-8") as f:
    f.write(versions_html)

redirect_html = f"""<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta http-equiv="refresh" content="0; url={repo_name}/{tag}/index.html">
<title>Redirecting...</title>
</head>
<body>
<p>Redirecting to <a href="{repo_name}/{tag}/index.html">version {tag}</a>...</p>
</body>
</html>"""

with open("deploy/index.html", "w", encoding="utf-8") as f:
    f.write(redirect_html)

print(f"Generated HTML files for release {tag}")
PYEOF
            
          else
            cp -r index.html ru en deploy/
          fi
      
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          keep_files: true
